{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","getTodoId","reduce","maxId","Math","max","preparedTodo","findUser","usersFromServer","find","App","useState","todosFromServer","setTodos","setTitle","setUserId","isValidTitle","setIsValidTitle","isValidUser","setIsValidUser","action","method","onSubmit","event","preventDefault","length","prevTodos","newTodo","Boolean","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26dcd4be.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    id,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\n\nimport { ChangeEvent, FormEvent, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\n\nconst getTodoId = (todos: Omit<Todo, 'user'>[]) => {\n  return todos.reduce((maxId, todo) => Math.max(maxId, todo.id), 0);\n};\n\nconst preparedTodo = (todos: Omit<Todo, 'user'>[]) => {\n  return todos.map((todo) => {\n    const findUser = usersFromServer.find((user) => user.id === todo.userId);\n\n    return { ...todo, user: findUser || null };\n  });\n};\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [isValidTitle, setIsValidTitle] = useState(true);\n  const [isValidUser, setIsValidUser] = useState(true);\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    const isFormValid = title.length && userId;\n\n    if (isFormValid) {\n      setTodos((prevTodos) => {\n        const newTodo = {\n          id: getTodoId(prevTodos) + 1,\n          title,\n          completed: false,\n          userId,\n        };\n\n        return [...prevTodos, newTodo];\n      });\n      setTitle('');\n      setUserId(0);\n    } else {\n      setIsValidTitle(Boolean(title.length));\n      setIsValidUser(Boolean(userId));\n    }\n  };\n\n  const handleChangeTitle = (\n    { target: { value } }: ChangeEvent<HTMLInputElement>,\n  ) => {\n    setTitle(value);\n    setIsValidTitle(Boolean(value) || !userId);\n  };\n\n  const handleChangeUserId = (\n    { target: { value } }: ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setUserId(+value);\n    setIsValidUser(Boolean(value) || !title);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>\n        Add todo form\n      </h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleChangeTitle}\n            />\n          </label>\n\n          {!isValidTitle && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleChangeUserId}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n\n              {usersFromServer.map(({ id, name }) => (\n                <option value={id} key={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {!isValidUser && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={preparedTodo(todos)} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}